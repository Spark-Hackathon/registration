<title>{{title}}</title>

<style>
    * {
        font-family: "Courier", sans-serif;
    }

    table {
        border: 1px solid black;
    }

    tr, th, td {
        border: 1px solid #DADCE0;
    }

    th, td {
        padding: 12px;
    }
</style>

<div id="admin" class="mt-40">
    <form id="select-applicants">
        <input type="hidden" name="code" class="password">

        <label for="applicants-or-registered">Select applicants or registered campers?</label>
        <select name="applicants-or-registered" id="applicants-or-registered">
            <option value="0">Select all applicants</option>
            <option value="1">Select all registered</option>
        </select>

        <input type="submit" value="Query">
    </form>

    <table>
        <tr>
            <th>Camper ID</th>
            <th>First Name</th>
            <th>Last Name</th>
            <th>Week Attending</th>
            <th>Type</th>
            <th>Hopes & Dreams</th>
            <th>Participated Before?</th>
            <th>Accept or Delete?</th>
        </tr>
        <tbody id="applicant-data"></tbody>
    </table>

    <hr>

    <form id="select-weeks">
        <input type="hidden" name="code" class="password">

        <label>Get all weeks</label>

        <input type="submit" value="Query">
    </form>
    <button id="new-week">New Week</button>

    <table>
        <tr>
            <th>Week ID</th>
            <th>Week Name</th>
            <th>Virtual Available?</th>
            <th>In-person Available?</th>
            <th>Action</th>
        </tr>
        <tbody id="week-data"></tbody>
    </table>

    <hr>

    <form action="/admin/send-mail" method="POST" class="border-2 px-4 py-2">
        <input type="hidden" name="code" class="password">
        <label for="week_name">Send mail</label>
        <input type="submit" value="Query">
    </form>

    <hr>

    <form id="select-questions">
        <input type="hidden" name="code" class="password">
        <label>Get questions</label>
        <input type="submit" value="Query">
    </form>

    <table>
        <tr>
            <th>Question ID</th>
            <th>Week</th>
            <th>Question</th>
            <th>Responses</th>
            <th>Action</th>
        </tr>
        <tbody id="question-data"></tbody>
    </table>

    <p>Note: first you have to get all weeks before attempting to create new question.</p>
    <form id="new-question">
        <input type="hidden" name="code" class="password">
        <label for="week">Select week</label>
        <select name="week" id="week_title" required></select>
        <label for="question">Question</label>
        <input type="text" name="question" id="question" placeholder="ex. Why do you think you'd be a good candidate?" required>
        <input type="submit" value="Query">
    </form>
</div>

<script src="https://code.jquery.com/jquery-3.5.1.min.js" integrity="sha256-9/aliU8dGd2tb6OSsuzixeV4y/faTqgFtohetphbbj0=" crossorigin="anonymous"></script>
<script>
    let password = "7e135d92-10d3-4a20-8e1d-4028d0587f99"; //prompt("Enter admin password");

    if(password == null || password == undefined || password == "") {
        document.getElementById("admin").style.display = "none";
    } else {
        let password_fields = document.getElementsByClassName("password");

        for(let fields of password_fields) {
            fields.value = password;
        }
    }

    const accept_camper = (week_name, camper_id) => {
        fetch("/admin/accept-camper-application", { 
            method: "POST",
            cache: "no-cache",
            headers: { "Content-Type": "application/json" },
            redirect: "manual",
            body: JSON.stringify({
                code: password,
                week_name,
                camper_id
            })
        })
            .then(() => alert("=== ACCEPTED CAMPER ==="))
            .catch(err => console.error(err));
    }

    const delete_camper = (week_name, camper_id) => {
        fetch("/admin/delete-enrollment", {
            method: "POST",
            cache: "no-cache",
            headers: { "Content-Type": "application/json" },
            redirect: "manual",
            body: JSON.stringify({
                code: password,
                week_name,
                camper_id
            })
        })
            .then(() => alert("=== DELETED CAMPER ==="))
            .catch(err => console.error(err));
    }

    const delete_week = (id) => {
        fetch("/admin/delete-week", {
            method: "POST",
            cache: "no-cache",
            headers: { "Content-Type": "application/json" },
            redirect: "manual",
            body: JSON.stringify({
                code: password,
                code2: "eatmyshorts",
                id
            })
        })
            .then(() => alert("=== WEEK DELETED ==="))
            .catch(err => console.error(err));
    }

    const delete_question = (question_id, week_name) => {
        fetch("/admin/delete-question", {
            method: "POST",
            cache: "no-cache",
            headers: { "Content-Type": "application/json" },
            redirect: "manual",
            body: JSON.stringify({
                code: password,
                week: week_name,
                id: question_id
            })
        })
            .then(() => alert("=== QUESTION DELETED ==="))
            .catch(err => console.error(err));
    }

    const delete_reponse = (question_id, camper_id) => {
        fetch("/admin/delete-response", {
            method: "POST",
            cache: "no-cache",
            headers: { "Content-Type": "application/json" },
            redirect: "manual",
            body: JSON.stringify({
                code: password,
                question_id,
                camper_id
            })
        })
            .then(() => alert("=== RESPONSE DELETED ==="))
            .catch(err => console.error(err));
    }

    const new_week = () => {
        let week_name = prompt("Week Name?");

        if(week_name != "") {
            let start_date = prompt("Start date? (YYYY-MM-DD)");
            let end_date = prompt("End date? (YYYY-MM-DD)");
            let cb_code = "charliedawitch"; //prompt("CB Code?");
            let inclass_available = prompt("In-class option available? y/n") == "y" ? 1 : 0;
            let virtual_available = prompt("Virtual option available? y/n") == "y" ? 1 : 0;

            fetch("/admin/add-week", {
                method: "POST",
                cache: "no-cache",
                headers: { "Content-Type": "application/json" },
                redirect: "manual",
                body: JSON.stringify({
                    code: password,
                    week_name,
                    start_date,
                    end_date,
                    cb_code,
                    inclass_available,
                    virtual_available
                })
            })
                .then(() => alert("=== WEEK CREATED ==="))
                .catch(err => console.error(err));
        }
    }

    $("#new-week").click(new_week)

    $("#select-applicants").on("submit", async event => {
        event.preventDefault();
        $("#applicant-data").empty();

        let form_data = {
            code: password,
            "applicants-or-registered": $("#applicants-or-registered").val()
        }

        fetch("/admin/pull-current-campers", { 
            method: "POST",
            cache: "no-cache",
            headers: { "Content-Type": "application/json" },
            redirect: "manual",
            body: JSON.stringify(form_data)
        })
            .then(response => response.json())
            .then(data => {
                let campers = data.campers;

                let type_translation = {
                    "0": "Designer",
                    "1": "Artist",
                    "2": "Researcher",
                    "3": "Writer",
                    "4": "Leader",
                    "5": "None",
                }
                
                for(let camper of campers) {
                    let camper_row = $("<tr></tr>");

                    let id = $(`<td>${camper.camper_id}</td>`);
                    let first_name = $(`<td>${camper.first_name}</td>`);
                    let last_name = $(`<td>${camper.last_name}</td>`);
                    let week = $(`<td>${camper.week}</td>`);
                    let type = $(`<td>${type_translation[camper.type]}</td>`);
                    let hopes_dreams = $(`<td>${camper.hopes_dreams}</td>`);
                    let participated = $(`<td>${camper.participated}</td>`);
                    let accept_decline = `
                        <button onclick="accept_camper('${camper.week}', ${camper.camper_id})">Accept Camper</button>
                        <button onclick="delete_camper('${camper.week}', ${camper.camper_id})">Delete Camper</button>
                        `;

                    camper_row.append([
                        id,
                        first_name,
                        last_name,
                        week,
                        type,
                        hopes_dreams,
                        participated,
                        accept_decline
                    ]);

                    $("#applicant-data").append(camper_row);
                }
            })
            .catch(err => console.error(err));
    });

    $("#select-weeks").on("submit", event => {
        event.preventDefault();
        $("#week-data").empty();

        fetch("/admin/get-weeks")
            .then(response => response.json())
            .then(weeks => {
                for(let week of weeks) {
                    let week_row = $("<tr></tr>");

                    let id = $(`<td>${week.week_id}</td>`);
                    let name = $(`<td>${week.name}</td>`);

                    $("select#week_title").append(`<option name="${week.name}">${week.name}</option>`);

                    let virtual = $(`<td>${week.virtual_available ? "Yes" : "No"}</td>`);
                    let in_person = $(`<td>${week.inclass_available ? "Yes" : "No"}</td>`);
                    let delete_button = `<button onclick="delete_week(${week.week_id})">Delete Week</button>`;

                    week_row.append([
                        id,
                        name,
                        virtual,
                        in_person,
                        delete_button
                    ]);

                    $("#week-data").append(week_row);
                }
            })
            .catch(err => console.error(err));
    });

    $("#select-questions").on("submit", event => {
        event.preventDefault();
        $("#question-data").empty();

        fetch(`/admin/get-questions/${password}`)
            .then(response => response.json())
            .then(questions => {
                for(let question of questions) {
                    let question_row = $("<tr></tr>");

                    console.log(question);

                    let q_id = $(`<td>${question.id}</td>`);
                    let q = $(`<td>${question.question}</td>`);
                    let week = $(`<td>${question.week}</td>`);
                    let responses = $("<td></td>");
                    let delete_action = `<button onclick="delete_question(${question.id}, '${question.week}');">Delete Question</button>`;

                    for(let response of question.responses) {
                        let r_container = $("<div></div>");

                        let res = $(`<p>${response.response} <button onclick="delete_response(${question.id}, ${response.id});">Delete Response</button></p>`);

                        r_container.append([ res ]);
                        responses.append(r_container);
                    }

                    question_row.append([
                        q_id,
                        week,
                        q,
                        responses,
                        delete_action
                    ]);

                    $("#question-data").append(question_row);
                }
            })
            .catch(err => console.error(err));
    });

    $("#new-question").on("submit", event => {
        event.preventDefault();
        
        let week = $("#week_title").val();
        let question = $("#question").val();

        fetch("/admin/add-question", {
            method: "POST",
            cache: "no-cache",
            headers: { "Content-Type": "application/json" },
            redirect: "manual",
            body: JSON.stringify({
                code: password,
                week,
                question
            })
        })
                .then(() => alert("=== NEW QUESTION CREATED ==="))
                .catch(err => console.error(err));
    });
</script>